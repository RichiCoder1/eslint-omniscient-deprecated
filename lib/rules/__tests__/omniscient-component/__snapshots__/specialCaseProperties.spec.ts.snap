// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`special cased properties defaultProps should handle default props method 1`] = `
Object {
  "fixed": true,
  "messages": Array [],
  "output": "import { Component } from 'react';
import { isEqualImmutable } from 'ImmutableComponent';

import component from 'omniscient';
import { getDefaultPropsFor } from 'test';

class TestComponent extends Component {
    static defaultProps = (() => {
        const test = 2;
        return getDefaultPropsFor(test);
    })();

    static displayName = \\"TestComponent\\";

    shouldComponentUpdate(nextProps, nextState) {
        return !(
            isEqualImmutable(this.props, nextProps) &&
            ((!oldState && !newState) ||
                isEqualImmutable(this.state, nextState))
        );
    }

    render() {
        const { label } = this.props;
        return <h1>{label}</h1>;
    }
}",
}
`;

exports[`special cased properties defaultProps should handle default props object 1`] = `
Object {
  "fixed": true,
  "messages": Array [],
  "output": "import { Component } from 'react';
import { isEqualImmutable } from 'ImmutableComponent';

import component from 'omniscient';

class TestComponent extends Component {
    static defaultProps = { label: \\"test\\" };

    static displayName = \\"TestComponent\\";

    shouldComponentUpdate(nextProps, nextState) {
        return !(
            isEqualImmutable(this.props, nextProps) &&
            ((!oldState && !newState) ||
                isEqualImmutable(this.state, nextState))
        );
    }

    render() {
        const { label } = this.props;
        return <h1>{label}</h1>;
    }
}",
}
`;

exports[`special cased properties should handle initial state 1`] = `
Object {
  "fixed": true,
  "messages": Array [],
  "output": "import { Component } from 'react';
import { isEqualImmutable } from 'ImmutableComponent';

import component from 'omniscient';

class TestComponent extends Component {
    static displayName = \\"TestComponent\\";

    shouldComponentUpdate(nextProps, nextState) {
        return !(
            isEqualImmutable(this.props, nextProps) &&
            ((!oldState && !newState) ||
                isEqualImmutable(this.state, nextState))
        );
    }

    state = { i: 1 };

    render() {
        const { label } = this.props;
        return <h1>{label}</h1>;
    }
}",
}
`;

exports[`special cased properties should handle propTypes 1`] = `
Object {
  "fixed": true,
  "messages": Array [],
  "output": "import { Component } from 'react';
import { isEqualImmutable } from 'ImmutableComponent';

import component from 'omniscient';

class TestComponent extends Component {
    static propTypes = {
        label: PropTypes.string
    };

    static displayName = \\"TestComponent\\";

    shouldComponentUpdate(nextProps, nextState) {
        return !(
            isEqualImmutable(this.props, nextProps) &&
            ((!oldState && !newState) ||
                isEqualImmutable(this.state, nextState))
        );
    }

    render() {
        const { label } = this.props;
        return <h1>{label}</h1>;
    }
}",
}
`;
