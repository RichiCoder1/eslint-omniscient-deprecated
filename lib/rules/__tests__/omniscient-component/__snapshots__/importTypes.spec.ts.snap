// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`import types should handle already present custom import types 1`] = `
Object {
  "fixed": true,
  "messages": Array [],
  "output": "import { isEqualImmutable } from 'ImmutableComponent';
import MyLib from 'MyLib';
import component from 'omniscient';

class TestComponent extends MyLib.MyComponent {
    shouldComponentUpdate(nextProps, nextState) {
        return !(
            isEqualImmutable(this.props, nextProps) &&
            ((!oldState && !newState) ||
                isEqualImmutable(this.state, nextState))
        );
    }

    render() {
        return <h1>Test</h1>;
    }
}",
}
`;

exports[`import types should handle custom import types 1`] = `
Object {
  "fixed": true,
  "messages": Array [],
  "output": "import { MyComponent } from 'MyLib';
import { isEqualImmutable } from 'ImmutableComponent';

import component from 'omniscient';

class TestComponent extends MyComponent {
    shouldComponentUpdate(nextProps, nextState) {
        return !(
            isEqualImmutable(this.props, nextProps) &&
            ((!oldState && !newState) ||
                isEqualImmutable(this.state, nextState))
        );
    }

    render() {
        return <h1>Test</h1>;
    }
}",
}
`;

exports[`import types should handle default import types 1`] = `
Object {
  "fixed": true,
  "messages": Array [],
  "output": "import { Component } from 'react';
import { isEqualImmutable } from 'ImmutableComponent';

import component from 'omniscient';

class TestComponent extends Component {
    shouldComponentUpdate(nextProps, nextState) {
        return !(
            isEqualImmutable(this.props, nextProps) &&
            ((!oldState && !newState) ||
                isEqualImmutable(this.state, nextState))
        );
    }

    render() {
        return <h1>Test</h1>;
    }
}",
}
`;

exports[`import types should handle double import fixes 1`] = `
Object {
  "fixed": true,
  "messages": Array [],
  "output": "import { memo, areEqual } from 'MyLib';

import component from 'omniscient';

const TestComponent = memo(function TestComponent() {
    return <h1>Test</h1>;
}, areEqual);",
}
`;

exports[`import types should handle double import fixes on already present type 1`] = `
Object {
  "fixed": true,
  "messages": Array [],
  "output": "import MyLib from 'MyLib';
import component from 'omniscient';

const TestComponent = MyLib.memo(function TestComponent() {
    return <h1>Test</h1>;
}, MyLib.areEqual);",
}
`;

exports[`import types should handle existing default import 1`] = `
Object {
  "fixed": true,
  "messages": Array [],
  "output": "import { isEqualImmutable } from 'ImmutableComponent';
import React from 'react';
import component from 'omniscient';

class TestComponent extends React.Component {
    shouldComponentUpdate(nextProps, nextState) {
        return !(
            isEqualImmutable(this.props, nextProps) &&
            ((!oldState && !newState) ||
                isEqualImmutable(this.state, nextState))
        );
    }

    render() {
        return <h1>Test</h1>;
    }
}",
}
`;

exports[`import types should handle existing named import 1`] = `
Object {
  "fixed": true,
  "messages": Array [],
  "output": "import { isEqualImmutable } from 'ImmutableComponent';
import { Component } from 'react';
import component from 'omniscient';

class TestComponent extends Component {
    shouldComponentUpdate(nextProps, nextState) {
        return !(
            isEqualImmutable(this.props, nextProps) &&
            ((!oldState && !newState) ||
                isEqualImmutable(this.state, nextState))
        );
    }

    render() {
        return <h1>Test</h1>;
    }
}",
}
`;
